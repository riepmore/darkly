En cliquant sur LEAVE A FEEDBACK sur la homepage nous arrivons ici:
http://192.168.57.12/?page=feedback

En complément de feedback_form, nous avons réussi a passer la "protection" affichant le flag pour creer un vrai exploit.

En essayant une injection XSS sur message, j'ai vu qu'il y avait bien un contrôle
de ce qui était envoyé: Les balises disparaissent, etc.

Cependant ce n'est pas le cas de Name, mais il y a une limite de 10 caractères
facilement contournable en supprimant tout simplement maxlength="10" sur le html:
<input name="txtName" type="text" size="30" maxlength="10">

Puis, il suffit d'entrer ce code:
// <IMG """><SCRIPT>alert(document.cookie)</SCRIPT>"\>

Et ainsi, n'importe qui allant sur cette page verra son cookie de session apparaitre:
I_am_admin=68934a3e9455fa72420237eb05902327

Ici une simple alert() n'est en rien efficace, mais ce qui est possible de faire, c'est
de redirigé ce cookie sur un autre site de l'attaquant pour le récupérer de façon
transparente pour l'utilisateur.

La solution pour se proteger de ce genre d'exploit ici est la même que pour feedback-form, a savoir:

***
Il est important de "cleaner" ce que l'utilsateur envoie au serveur
avant de le mettre en base, puis de le réafficher.
Il est possible de prendre en compte les caractères pouvant étre sujets à une
injection (< > " ') en les transformant en caractère affichable par html "
< ---> &lt;

> ---> &gt;

" ---> &quot;

' ---> &apos;
***